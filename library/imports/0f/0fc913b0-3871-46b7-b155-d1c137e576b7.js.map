{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\event-listener.js"],"names":["EventListener","obj","Register","on","name","method","hasOwnProperty","push","fire","handlerList","i","length","handler","args","j","arguments","apply","off","handleList","splice"],"mappings":";;;;;;;;;AAAA;;;AAGA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAAUC,GAAV,EAAe;AACjC,MAAIC,WAAW,EAAf;AACAD,MAAIE,EAAJ,GAAS,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;AAC9B;AACD,QAAI,CAACH,SAASI,cAAT,CAAwBF,IAAxB,CAAL,EAAmC;AACjC;AACEF,eAASE,IAAT,IAAiB,EAAjB;AACH;AACD;AACAF,aAASE,IAAT,EAAeG,IAAf,CAAoBF,MAApB;AACD,GARD;AAUC;AACDJ,MAAIO,IAAJ,GAAW,UAAUJ,IAAV,EAAgB;AACxB;AACD,QAAIF,SAASI,cAAT,CAAwBF,IAAxB,CAAJ,EAAkC;AAC/B;AACD,UAAIK,cAAcP,SAASE,IAAT,CAAlB;AACC;AACD,WAAK,IAAIM,IAAI,CAAb,EAAiBA,IAAID,YAAYE,MAAjC,EAA0CD,GAA1C,EAA+C;AAC7C;AACA,YAAIE,UAAUH,YAAYC,CAAZ,CAAd;AACA,YAAIG,OAAO,EAAX;AACA;AACA,aAAK,IAAIC,IAAI,CAAb,EAAiBA,IAAIC,UAAUJ,MAA/B,EAAwCG,GAAxC,EAA6C;AAC3CD,eAAKN,IAAL,CAAUQ,UAAUD,CAAV,CAAV;AACD;AACD;AACAF,gBAAQI,KAAR,CAAc,IAAd,EAAoBH,IAApB;AACD;AACF;AACF,GAlBD;AAmBA;AACAZ,MAAIgB,GAAJ,GAAU,UAAUb,IAAV,EAAgBC,MAAhB,EAAwB;AAChC;AACA,QAAIH,SAASI,cAAT,CAAwBF,IAAxB,CAAJ,EAAkC;AAChC;AACA,UAAIc,aAAahB,SAASE,IAAT,CAAjB;AACA,WAAK,IAAIM,IAAI,CAAb,EAAiBA,IAAIQ,WAAWP,MAAhC,EAAyCD,GAAzC,EAA8C;AAC5C,YAAIQ,WAAWR,CAAX,MAAkBL,MAAtB,EAA6B;AAC3B;AACAa,qBAAWC,MAAX,CAAkBT,CAAlB,EAAqB,CAArB;AACD;AACF;AACF;AACF,GAZD;AAaA,SAAOT,GAAP;AACD,CA/CH;kBAgDiBD","file":"event-listener.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["/**\r\n * Created by chu on 2017/10/9 0009.\r\n */\r\nconst EventListener = function (obj) {\r\n    let Register = {};\r\n    obj.on = function (name, method) {\r\n       //检查事件里面有没有注册的name\r\n      if (!Register.hasOwnProperty(name)){\r\n        //如果没有的话name等于一个列表\r\n          Register[name] = [];\r\n      }\r\n      //列表里面push进入一个方法\r\n      Register[name].push(method);\r\n    }\r\n    ;\r\n     //后面还会传入其他参数\r\n    obj.fire = function (name) {\r\n       //事件注册表里面有木有注册的事件\r\n      if (Register.hasOwnProperty(name)){\r\n         //取出这个列表\r\n        let handlerList = Register[name];\r\n         //遍历这个列表\r\n        for (let i = 0 ; i < handlerList.length ; i ++){\r\n          //取出列表里面的一个方法\r\n          let handler = handlerList[i];\r\n          let args = [];\r\n          //获取参数，遍历js一个方法的默认参数，他也是一个列表\r\n          for (let j = 1 ; j < arguments.length ; j ++){\r\n            args.push(arguments[j]);\r\n          }\r\n          //引用运行\r\n          handler.apply(this, args);\r\n        }\r\n      }\r\n    };\r\n    //注销\r\n    obj.off = function (name, method) {\r\n      //检测注册表里面有没有这个方法\r\n      if (Register.hasOwnProperty(name)){\r\n        //如果有的话取出，handlerList表示方法列表\r\n        let handleList = Register[name];\r\n        for (let i = 0 ; i < handleList.length ; i ++){\r\n          if (handleList[i] === method){\r\n            //删掉他\r\n            handleList.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    return obj;\r\n  };\r\n  export default EventListener;"]}